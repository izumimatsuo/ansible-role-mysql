---
- name: install mysql repository
  yum:
    name: "{{ MY_PACKAGE_RPM }}"
  tags: mysql

- block:
    - name: install yum-utils package
      yum:
        name: yum-utils
    - name: "detected {{ MY_PACKAGE_ENABLE }} status"
      shell: "mysqld --version | grep {{ MY_VERSION }}"
      register: mysql_status
      failed_when: no
      check_mode: no
      changed_when: mysql_status.rc != 0
    - block:
        - name: "disable {{ MY_PACKAGE_DISABLE }} repository"
          shell: "yum-config-manager --disable {{ MY_PACKAGE_DISABLE }}-community"
        - name: "enable {{ MY_PACKAGE_ENABLE }} repository"
          shell: "yum-config-manager --enable {{ MY_PACKAGE_ENABLE }}-community"
      check_mode: no
      when: mysql_status is changed
    - name: install mysql package
      yum:
        name:
          - MySQL-python
          - mysql-community-server
  tags: mysql

- name: copy mysql conf
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
    mode: 0600
  notify: restart mysql service
  tags: mysql

- name: setup network conf
  shell: echo "NETWORKING=yes" > /etc/sysconfig/network
  args:
    creates: /etc/sysconfig/network
  check_mode: no
  tags: mysql

- name: start mysql service
  service:
    name: mysqld
    state: started
    enabled: yes
  tags: mysql

- name: change the root password
  command: >
    mysqladmin password '{{ mysql_user.password }}' -u root
  changed_when: false

- name: create replication user to master
  mysql_user:
    login_user: "{{ mysql_user.name }}"
    login_password: "{{ mysql_user.password }}"
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_slave | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: '*.*:REPLICATION SLAVE,REPLICATION CLIENT'
    state: present
  when: mysql_replication_role == 'master'

- name: get replication slave status to slave
  mysql_replication:
    mode: getslave
    login_user: "{{ mysql_user.name }}"
    login_password: "{{ mysql_user.password }}"
  register: slave
  when: mysql_replication_role == 'slave'

- name: change replication master to slave
  mysql_replication:
    mode: changemaster
    login_user: "{{ mysql_user.name }}"
    login_password: "{{ mysql_user.password }}"
    master_host: "{{ mysql_replication_master }}"
    master_port: "{{ mysql_listen_port }}"
    master_user: "{{ mysql_replication_user.name }}"
    master_password: "{{ mysql_replication_user.password }}"
    master_auto_position: 1
  when: >
    mysql_replication_role == 'slave'
    and slave.Is_Slave is defined and not slave.Is_Slave

- name: start replication to slave
  mysql_replication:
    mode: startslave
    login_user: "{{ mysql_user.name }}"
    login_password: "{{ mysql_user.password }}"
  when: >
    mysql_replication_role == 'slave'
    and slave.Is_Slave is defined and not slave.Is_Slave
